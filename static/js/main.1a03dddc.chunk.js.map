{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","caps","word","lower","toLowerCase","charAt","toUpperCase","slice","alert","react_default","a","createElement","Fragment","className","concat","type","role","message","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","aria-labelledby","style","width","htmlFor","onClick","toggleMode","aria-checked","height","cursor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","heading","value","backgroundColor","onChange","event","target","rows","disabled","length","newText","showAlert","split","join","class","filter","element","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.1a03dddc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const caps = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   \r\n    props.alert &&  \r\n    <>\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{caps(props.alert.type)}</strong>: {caps(props.alert.message)} \r\n        {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href='#'>Home</a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"/\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Customize Themes\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className={`dropdown-item form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n                        } mx-4`}\r\n                      style={{ width: \"inherit\" }}\r\n                    >\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"flexSwitchCheckDefault\"\r\n                      >\r\n                        Change theme\r\n                      </label>\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        onClick={() => {\r\n                          props.toggleMode(null);\r\n                        }}\r\n                        role=\"switch\"\r\n                        aria-checked=\"true\"\r\n                        id=\"flexSwitchCheckDefault\"\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"dropdown-item bg-primary rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"primary\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"dropdown-item bg-danger rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"danger\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                  <li>\r\n                    <div\r\n                      className=\"dropdown-item bg-warning rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"warning\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"dropdown-item bg-info rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"info\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"#\">\r\n                  Thank you for your visit\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.prototype = { title: PropTypes.string.isRequired };\r\nNavbar.defaultProps = { title: 'set your title' };\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"uppercase clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"uppercase clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase\", \"success\");\r\n    }\r\n    const handleDelete = () => {\r\n        // console.log(\"uppercase clicked\" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"text deleted\", \"warning\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onchange done\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[  ]+/);\r\n        // eslint-disable-next-line\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"removed extra space \", \"success\");\r\n    }\r\n    const [text, setText] = useState('Enter Text Here');\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : '#06400d' }}>\r\n                <h3>{props.heading}</h3>\r\n                <h5>Enter your Text below to manipulate it</h5>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'light' ? 'white' : '#06400d', color: props.mode === 'dark' ? 'white' : '#06400d' }} onChange={handleOnChange} id=\"MyBox\" rows=\"6\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert To UPPERCASE</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick} >Convert To lowercase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-secondary mx-2 my-1\" onClick={handleExtraSpace} >Remove extra spaces</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-danger mx-2 my-1\" onClick={handleDelete} >Clear</button>\r\n            </div>\r\n            <div className=\"container my-2\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <span class=\"badge rounded-pill bg-info text-dark\"><h2>your tex summary :- </h2></span>\r\n                <p>It have {text.split(\" \").filter((element) => { return element.length !== 0 }).length} words and {text.length} characters </p>\r\n                <p>It takes {0.008 * text.split(\" \").filter((element) => { return element.length !== 0 }).length} minute to read </p>\r\n                <span class=\"badge rounded-pill bg-info text-dark\"><h3>preview</h3></span>\r\n                <p>{text.length > 0 ? text : \"enter something above to see output here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Alert from './components/Alert';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      message: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === 'dark') {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"light mode active\", \"success\");\r\n    }\r\n    else {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = 'gray';\r\n      showAlert(\"dark mode active\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar title=\"TextUtilities\" mode={mode} toggleMode={toggleMode} />\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\" >\r\n        <TextForm heading=\"TextUtils - Text Utilities -Word & Character counter | Uppercase to Lowercase | Lowercase to Uppercase\" showAlert={showAlert} mode={mode} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}