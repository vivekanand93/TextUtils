{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","caps","word","lower","toLowerCase","charAt","toUpperCase","slice","react_default","a","createElement","Fragment","style","height","alert","className","concat","type","role","message","About","myStyle","color","mode","backgroundColor","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","href","title","aria-label","aria-current","aboutText","width","htmlFor","onClick","toggleMode","aria-checked","cursor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","showAlert","split","join","navigator","clipboard","writeText","filter","element","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","setAlert","setTimeout","react_router_dom","cls","document","body","classList","remove","add","components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.f24cc783.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const caps = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   <>\r\n        <div style={{height: '50px'}}>\r\n        {props.alert &&  \r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{caps(props.alert.type)}</strong>: {caps(props.alert.message)} \r\n        {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","  import React from 'react'\r\n\r\n  export default function About(props) {\r\n    let myStyle = {\r\n      color: props.mode === 'dark'?'#6f72d3':'#620f54',\r\n      backgroundColor: props.mode === 'dark'?'#620f54':'#6f72d3'\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"container\" style={myStyle}>\r\n          <h1 className=\"my-2\">About US</h1>\r\n          <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n              <h2 className=\"accordion-header\"  id=\"headingOne\">\r\n                <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                  <strong> About analyzing your text</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  <strong>This is a free to use utility item.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n              <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                <strong>Browser compatibility</strong>\r\n                </button>\r\n              </h2>\r\n              <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                  <strong>It works fine on every Browser.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n              <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                  <strong>Help & Documentation</strong>\r\n                </button>\r\n              </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>Please visit our help site for more details</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      {/* <div className=\"container my-2\">\r\n      <button type='button' onClick={toggleStyle} className=\"btn btn-primary mx-2\"  >{btntxt}</button>\r\n      </div>  */}\r\n  </div>\r\n  </>\r\n  )}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"/\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Customize Themes\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className={`dropdown-item form-check form-switch text-${\r\n                        props.mode === \"light\" ? \"dark\" : \"light\"\r\n                      } mx-4`}\r\n                      style={{ width: \"inherit\" }}\r\n                    >\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"flexSwitchCheckDefault\"\r\n                      >\r\n                        Change theme\r\n                      </label>\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        onClick={() => {\r\n                          props.toggleMode(null);\r\n                        }}\r\n                        role=\"switch\"\r\n                        aria-checked=\"true\"\r\n                        id=\"flexSwitchCheckDefault\"\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"dropdown-item bg-primary rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"primary\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"dropdown-item bg-danger rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"danger\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                  <li>\r\n                    <div\r\n                      className=\"dropdown-item bg-warning rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"warning\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                  <li>\r\n                    {\" \"}\r\n                    <div\r\n                      className=\"dropdown-item bg-info rounded mx-1 my-1\"\r\n                      onClick={() => {\r\n                        props.toggleMode(\"info\");\r\n                      }}\r\n                      style={{\r\n                        height: \"20px\",\r\n                        width: \"inherit\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    ></div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"/\">\r\n                  Thank you for your visit\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"set your title\",\r\n  aboutText: \"enter about here\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowercase\", \"success\");\r\n    }\r\n    const handleDelete = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"text deleted\", \"warning\");\r\n    }\r\n    const handleCopy = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text copied \", \"success\"); \r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/); \r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"removed extra space \", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n    <>\r\n        <div className='container' style={{color:props.mode==='dark'?'#6f72d3':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\"> \r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='light'?'white':'#5ea5eb', \r\n                color:props.mode==='dark'?'white':'#5ea5eb'}} onChange={handleOnChange} id=\"MyBox\" rows=\"6\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert To UPPERCASE</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick} >Convert To lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-secondary mx-2 my-1\" onClick={handleExtraSpace} >Remove extra spaces</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy} >Copy Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-2 my-1\" onClick={handleDelete} >Clear</button>\r\n        </div> \r\n        <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'grey'}}>\r\n        <span className=\"badge rounded-pill bg-info text-dark\"><h2> Your Text Summary :- </h2></span>\r\n        <p> Text You provided above have {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words {text.length} characters and it takes {0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minute to read </p>\r\n        <span className=\"badge rounded-pill bg-info text-dark\"><h3>Preview </h3></span>\r\n        <p><br/>{text.length>0?text:\"Nothing to be previewed Enter something to preview it here\"}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const deleteBodyClasses = () => {\n    document.body.classList.remove(\"bg-primary\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-warning\");\n    document.body.classList.remove(\"bg-info\");\n  };\n  const toggleMode = (cls) => {\n    deleteBodyClasses();\n    document.body.classList.add(\"bg-\" + cls);\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#620f54\";\n      showAlert(\"mode changed\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#6f72d3\";\n      showAlert(\"mode changed\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtilities\"\n          mode={mode}\n          toggleMode={toggleMode}\n          aboutText=\"About us\"\n        />\n        <Alert alert={alert} />\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <TextForm\n                heading=\"Text Utilities -Word counter, Character counter | Uppercase to Lowercase | Lowercase to Uppercase\"\n                showAlert={showAlert}\n                mode={mode}\n              />\n            }\n          />\n          <Route\n            exact\n            path=\"/About\"\n            element={<About mode={mode} aboutText=\"About\" />}\n          />\n        </Routes>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}